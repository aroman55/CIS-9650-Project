Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CvrIu3B6MltmpPnp_YisAzCtD470OuGZ
"""

import os
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from scipy import stats

df = pd.read_csv('/Portugual_hour_clean.csv')
df2 = pd.read_csv('/Seoul_hour_clean.csv')

f = df.groupby('weekday')["casual_count"].sum().plot(kind='line', color="Blue", label="Casual_Porto", legend=True)
f = df.groupby('weekday')["registered_count"].sum().plot(kind='bar', color="lightblue", label="Registered_Porto",legend=True, title = "Correlation between Registered and Causual Users(day)")
plt.xticks([0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0],['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'])

"""comparing both the

Comparing both cities, we see more fluctuations in seoul in number of riders per day compared to the steady rate of porto we see throughout the week.
"""

f = df2.groupby('weekday')["count"].mean().plot(kind='bar',label="Seoul", legend=True)
f = df.groupby('weekday')["total_count"].mean().plot(kind='line',color = "red",label="Porto",legend=True)
plt.xticks([0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0],['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'])

g.set(xlabel="Weekday", ylabel="Mean_Rentals")

df2['Temp_F'] = round(((df2["temp"] * 1.8) + 32),1)
f = df2.groupby('Temp_F')["count"].sum().plot(kind='line',label="Seoul", legend=True)
f = df.groupby('temp')["total_count"].sum().plot(kind='line',label="Porto",legend=True, title="Bike Rental Corellation between Porto and Seoul by Temp")
f.set(xlabel="Temp", ylabel="Sum_Rentals")

print("Humidity affecting bike rentals?")
df['Hum'] = (df["hum"] * 100)

g = df.groupby('Hum')["total_count"].sum().plot(kind='line',label="Porto",legend=True)
g = df2.groupby('hum')["count"].sum().plot(kind='line',label="Seoul", legend=True, title="Bike Rental Corellation between Porto and Seoul by Humidity")
g.set(xlabel="Humidity", ylabel="Sum_Rentals")

rr = df.groupby("weathersit")['total_count'].count()
print(rr)
df['weathersit'] = df['weathersit'].replace([1,2,3,4],['Clear/Partly Clouded','Mist/Cloudy','Light Snow/Rain','Heavy Rain/Snow/fog'])
gg = sns.FacetGrid(df, col="weathersit")
gg = gg.map(plt.hist,"temp", color = "Green", width=6)
gg.set(xlabel="Temp_Porto", ylabel="Count")

df['weathersit'] = df['weathersit'].replace([1,2,3,4],['Clear/Partly Clouded','Mist/Cloudy','Light Snow/Rain','Heavy Rain/Snow/fog'])
rr = df.groupby("weathersit")['total_count'].sum()
print(rr)
df.groupby(['weathersit','temp',])["total_count"].sum()
gg = sns.FacetGrid(df, col="weathersit")
gg = gg.map(plt.scatter,"temp","total_count")
gg.set(xlabel="Temp_Porto", ylabel="Total_Rentals")

df2['Weather'] = df2['Weather'].replace([1,2,3,4],['Clear/Partly Clouded','Mist/Cloudy','Light Snow/Rain','Heavy Rain/Snow/fog'])
df2['Temp_F'] = round(((df2["temp"] * 1.8) + 32),1)
gg = sns.FacetGrid(df2, col="Weather")
gg = gg.map(plt.hist,"Temp_F", color = "Green", width=6)

df2.loc[(df2['visibility'] <= 150), 'Weather'] = 4
df2.loc[(df2['visibility'] > 150) & (df2['visibility'] <= 499), 'Weather'] = 3
df2.loc[(df2['visibility'] > 499) & (df2['visibility'] <= 799), 'Weather'] = 2
df2.loc[(df2['visibility'] > 800), 'Weather'] = 1
rrr = df2.groupby('Weather')['count'].count()
print(rrr)

df2['weather'] = df2['Weather'].replace([1,2,3,4],['Clear/Partly Clouded','Mist/Cloudy','Light Snow/Rain','Heavy Rain/Snow/fog'])
df2.loc[(df2['visibility'] <= 150), 'Weather'] = 4
df2.loc[(df2['visibility'] > 150) & (df2['visibility'] <= 499), 'Weather'] = 3
df2.loc[(df2['visibility'] > 499) & (df2['visibility'] <= 799), 'Weather'] = 2
df2.loc[(df2['visibility'] > 800), 'Weather'] = 1
rrr = df2.groupby('weather')['count'].sum()
print(rrr)

df2['Temp_F'] = round(((df2["temp"] * 1.8) + 32),1)
df2.groupby(['Weather','Temp_F',])["count"].sum()
gg = sns.FacetGrid(df2, col="weather")
gg = gg.map(plt.scatter,"Temp_F","count")

gg.set(xlabel="Temp_Seoul", ylabel="Total_Rentals")

f = df.groupby('hour')["casual_count"].mean().plot(kind='line', color="red",label="Casual_Porto", legend=True)
f = df.groupby('hour')["total_count"].mean().plot(kind='bar',label="Registered_Porto",legend=True, title="Correlation between Average Casual and Registered Renters(24hr)")
f.set(xlabel="hour", ylabel="Mean_Rentals")

f = df2.groupby('snowfall')["count"].mean().plot(kind='line',label="Seoul", legend=True, title="Snowfall Effect on Rental Bikes")
f.set(xlabel="Snowfall", ylabel="Mean_Rentals")

f = df2.groupby('rainfall')["count"].mean().plot(kind='line',label="Seoul", legend=True, title = "Rainfall Effect on Rentals")
f.set(xlabel="Rainfall", ylabel="Mean_Rentals")
